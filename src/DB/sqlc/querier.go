// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package DB

import (
	"context"
)

type Querier interface {
	CreateAddresses(ctx context.Context, arg CreateAddressesParams) (Address, error)
	CreateCourse(ctx context.Context, arg CreateCourseParams) (Course, error)
	CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error)
	CreateMentor(ctx context.Context, arg CreateMentorParams) (Mentor, error)
	CreateStudent(ctx context.Context, arg CreateStudentParams) (Student, error)
	CreateStudentCourses(ctx context.Context, arg CreateStudentCoursesParams) (StudentCourse, error)
	CreateSubscription(ctx context.Context, arg CreateSubscriptionParams) (Subscription, error)
	CreateUniversity(ctx context.Context, arg CreateUniversityParams) (University, error)
	DeleteCoursesOfAStudent(ctx context.Context, sID int64) error
	DeleteEventOfACourse(ctx context.Context, eID int64) error
	DeleteStudent(ctx context.Context, sID int64) (Student, error)
	DeleteSubscriptionOfAStudent(ctx context.Context, sID int64) error
	GetAddress(ctx context.Context, arg GetAddressParams) (Address, error)
	GetAddressesByCountry(ctx context.Context, country string) ([]Address, error)
	GetAllCourses(ctx context.Context) ([]Course, error)
	GetAllUniversities(ctx context.Context) ([]University, error)
	GetBalanceOfMentor(ctx context.Context, mID int64) (int32, error)
	GetCourse(ctx context.Context, cID int64) (Course, error)
	GetCourseByName(ctx context.Context, courseName string) (Course, error)
	GetCoursesBySemester(ctx context.Context, semester string) ([]Course, error)
	GetCoursesByUniversity(ctx context.Context, uID int64) ([]Course, error)
	GetCoursesOfAStudent(ctx context.Context, sID int64) ([]StudentCourse, error)
	GetEventByEventID(ctx context.Context, eID int64) (Event, error)
	GetEventsByCourseID(ctx context.Context, cID int64) ([]Event, error)
	GetMentor(ctx context.Context, mID int64) (Mentor, error)
	GetMentorByCourseID(ctx context.Context, cID int64) (Mentor, error)
	GetMentorByUserName(ctx context.Context, username string) (Mentor, error)
	GetStudent(ctx context.Context, sID int64) (Student, error)
	GetStudentByUserName(ctx context.Context, userName string) (Student, error)
	GetStudentCourse(ctx context.Context, arg GetStudentCourseParams) (StudentCourse, error)
	GetStudentsByUniversity(ctx context.Context, uID int64) ([]Student, error)
	GetStudentsOfACourse(ctx context.Context, cID int64) ([]StudentCourse, error)
	GetSubscriptionBySID(ctx context.Context, sID int64) (Subscription, error)
	GetSubscriptionBySubID(ctx context.Context, subID int64) (Subscription, error)
	GetUniversity(ctx context.Context, uID int64) (University, error)
	GetUniversityByName(ctx context.Context, universityName string) (University, error)
	UpdateBalanceOfMentor(ctx context.Context, arg UpdateBalanceOfMentorParams) (Mentor, error)
	UpdateEventColor(ctx context.Context, arg UpdateEventColorParams) (Event, error)
	UpdateEventEndTime(ctx context.Context, arg UpdateEventEndTimeParams) (Event, error)
	UpdateEventStartTime(ctx context.Context, arg UpdateEventStartTimeParams) (Event, error)
	UpdateEventTitle(ctx context.Context, arg UpdateEventTitleParams) (Event, error)
	UpdateScoreOfMentor(ctx context.Context, arg UpdateScoreOfMentorParams) (Mentor, error)
	UpdateStudentCredit(ctx context.Context, arg UpdateStudentCreditParams) (Student, error)
	UpdateStudentPassword(ctx context.Context, arg UpdateStudentPasswordParams) (Student, error)
	UpdateStudentProfile(ctx context.Context, arg UpdateStudentProfileParams) (Student, error)
	UpdateSubscriptionTime(ctx context.Context, arg UpdateSubscriptionTimeParams) (Subscription, error)
	UpdateSubscriptionType(ctx context.Context, arg UpdateSubscriptionTypeParams) (Subscription, error)
}

var _ Querier = (*Queries)(nil)
